<?xml version="1.0"?>
<Container version="2">
  <Name>Unraid-Kernel-Helper</Name>
  <Repository>ich777/unraid-kernel-helper</Repository>
  <Registry>https://hub.docker.com/r/ich777/unraid-kernel-helper</Registry>
  <Network>bridge</Network>
  <MyIP/>
  <MinVer>6.9.0</MinVer> 
  <MaxVer>6.9.2</MaxVer> 
  <Shell>bash</Shell>
  <Privileged>true</Privileged>
  <Support>https://forums.unraid.net/topic/92865-support-ich777-nvidiadvb-kernel-helper-docker/</Support>
  <Project>https://unraid.net/</Project>
  <Overview>With this container you can build your own customized Unraid Kernel.&#xD;
&#xD;
By default it will create the Kernel/Firmware/Modules/Rootfilesystem with the nVidia drivers.&#xD;
&#xD;
nVidia Driver installation: If you build the container with the nVidia drivers please make sure that no other process is using the graphics card otherwise the installation will fail and no nVidia drivers will be installed.&#xD;
&#xD;
ATTENTION: Please read the description of the variables carefully! If you started the container don't interrupt the build process, the container will automatically shut down if everything is finished. I recommend to open the log window, the build itself can take very long depending on your hardware but should be done in ~30minutes).&#xD;
&#xD;
THIS CONTAINER WILL NOT CHANGE ANYTHING TO YOUR EXISTING INSTALLATION OR ON YOUR USB KEY/DRIVE, YOU HAVE TO MANUALLY PUT THE CREATED FILES IN THE OUTPUT FOLDER TO YOUR USB KEY/DRIVE.&#xD;
&#xD;
UPDATE: Please redownload the template from the CA App to keep the template up to date.&#xD;
&#xD;
ATTENTION: PLEASE BACKUP YOUR EXISTING USB DRIVE FILES TO YOUR LOCAL COMPUTER IN CASE SOMETHING GOES WRONG!&#xD;
I AM NOT RESPONSIBLE IF YOU BREAK YOUR SERVER OR SOMETHING OTHER WITH THIS CONTAINER, THIS CONTAINER IS THERE TO HELP YOU EASILY BUILD A NEW IMAGE AND UNDERSTAND HOW THIS IS WORKING.&#xD;
&#xD;
Forum Notice: When something isn't working with your server and you make a post on the forum always include that you use a Kernel built with this container!</Overview>
  <Category>Productivity: Tools:Utilities</Category>
  <WebUI/>
  <Icon>https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/unraid-kernel.png</Icon>
  <ExtraParams/>
  <PostArgs/>
  <CPUset/>
  <DonateText>If you like my work please </DonateText>
  <DonateLink>https://www.paypal.me/chips777</DonateLink>
  <Description>With this container you can build your own customized Unraid Kernel.&#xD;
&#xD;
By default it will create the Kernel/Firmware/Modules/Rootfilesystem with the nVidia drivers.&#xD;
&#xD;
nVidia Driver installation: If you build the container with the nVidia drivers please make sure that no other process is using the graphics card otherwise the installation will fail and no nVidia drivers will be installed.&#xD;
&#xD;
ATTENTION: Please read the description of the variables carefully! If you started the container don't interrupt the build process, the container will automatically shut down if everything is finished. I recommend to open the log window, the build itself can take very long depending on your hardware but should be done in ~30minutes).&#xD;
&#xD;
THIS CONTAINER WILL NOT CHANGE ANYTHING TO YOUR EXISTING INSTALLATION OR ON YOUR USB KEY/DRIVE, YOU HAVE TO MANUALLY PUT THE CREATED FILES IN THE OUTPUT FOLDER TO YOUR USB KEY/DRIVE.&#xD;
&#xD;
UPDATE: Please redownload the template from the CA App to keep the template up to date.&#xD;
&#xD;
ATTENTION: PLEASE BACKUP YOUR EXISTING USB DRIVE FILES TO YOUR LOCAL COMPUTER IN CASE SOMETHING GOES WRONG!&#xD;
I AM NOT RESPONSIBLE IF YOU BREAK YOUR SERVER OR SOMETHING OTHER WITH THIS CONTAINER, THIS CONTAINER IS THERE TO HELP YOU EASILY BUILD A NEW IMAGE AND UNDERSTAND HOW THIS IS WORKING.&#xD;
&#xD;
Forum Notice: When something isn't working with your server and you make a post on the forum always include that you use a Kernel built with this container!</Description>
  <Networking>
    <Mode>bridge</Mode>
    <Publish/>
  </Networking>
  <Data>
    <Volume>
      <HostDir>/mnt/cache/appdata/kernel</HostDir>
      <ContainerDir>/usr/src</ContainerDir>
      <Mode>rw</Mode>
    </Volume>
    <Volume>
      <HostDir>/boot</HostDir>
      <ContainerDir>/host/boot</ContainerDir>
      <Mode>ro</Mode>
    </Volume>
  </Data>
  <Environment>
    <Variable>
      <Value>true</Value>
      <Name>BUILD_NVIDIA</Name>
      <Mode/>
    </Variable>
    <Variable>
      <Value>false</Value>
      <Name>BUILD_DVB</Name>
      <Mode/>
    </Variable>
    <Variable>
      <Value>libreelec</Value>
      <Name>DVB_TYPE</Name>
      <Mode/>
    </Variable>
    <Variable>
      <Value>false</Value>
      <Name>BUILD_ZFS</Name>
      <Mode/>
    </Variable>
    <Variable>
      <Value>false</Value>
      <Name>LOAD_UNLOAD_ZFS_WITH_ARRAY</Name>
      <Mode/>
    </Variable>
    <Variable>
      <Value>false</Value>
      <Name>BUILD_ISCSI</Name>
      <Mode/>
    </Variable>
    <Variable>
      <Value>true</Value>
      <Name>BUILD_MLX_MFT</Name>
      <Mode/>
    </Variable>
    <Variable>
      <Value>false</Value>
      <Name>BUILD_GNIF_VENDOR_RESET</Name>
      <Mode/>
    </Variable>
    <Variable>
      <Value>false</Value>
      <Name>APPLY_RMRR_PATCH</Name>
      <Mode/>
    </Variable>
    <Variable>
      <Value>false</Value>
      <Name>BUILD_HPSAHBA</Name>
      <Mode/>
    </Variable>
    <Variable>
      <Value>false</Value>
      <Name>ENABLE_i915</Name>
      <Mode/>
    </Variable>
    <Variable>
      <Value>false</Value>
      <Name>ENABLE_AMDGPU</Name>
      <Mode/>
    </Variable>
    <Variable>
      <Value>false</Value>
      <Name>BUILD_GVTG</Name>
      <Mode/>
    </Variable>
    <Variable>
      <Value>false</Value>
      <Name>BUILD_CORAL</Name>
      <Mode/>
    </Variable>
    <Variable>
      <Value>false</Value>
      <Name>BUILD_FIREWIRE</Name>
      <Mode/>
    </Variable>
    <Variable>
      <Value>all</Value>
      <Name>CPU_COUNT</Name>
      <Mode/>
    </Variable>
    <Variable>
      <Value>moderate</Value>
      <Name>CLEANUP</Name>
      <Mode/>
    </Variable>
    <Variable>
      <Value>true</Value>
      <Name>CREATE_BACKUP</Name>
      <Mode/>
    </Variable>
    <Variable>
      <Value>false</Value>
      <Name>SAVE_LOG</Name>
      <Mode/>
    </Variable>
    <Variable>
      <Value>false</Value>
      <Name>USER_PATCHES</Name>
      <Mode/>
    </Variable>
    <Variable>
      <Value>false</Value>
      <Name>CUSTOM_MODE</Name>
      <Mode/>
    </Variable>
    <Variable>
      <Value/>
      <Name>BETA_BUILD</Name>
      <Mode/>
    </Variable>
    <Variable>
      <Value>000</Value>
      <Name>UMASK</Name>
      <Mode/>
    </Variable>
    <Variable>
      <Value>99</Value>
      <Name>UID</Name>
      <Mode/>
    </Variable>
    <Variable>
      <Value>100</Value>
      <Name>GID</Name>
      <Mode/>
    </Variable>
    <Variable>
      <Value>770</Value>
      <Name>DATA_PERM</Name>
      <Mode/>
    </Variable>
    <Variable>
      <Value>/usr/src/stock</Value>
      <Name>IMAGES_FILE_PATH</Name>
      <Mode/>
    </Variable>
    <Variable>
      <Value>latest</Value>
      <Name>NV_DRV_V</Name>
      <Mode/>
    </Variable>
    <Variable>
      <Value>latest</Value>
      <Name>DD_DRV_V</Name>
      <Mode/>
    </Variable>
    <Variable>
      <Value>latest</Value>
      <Name>LE_DRV_V</Name>
      <Mode/>
    </Variable>
    <Variable>
      <Value>latest</Value>
      <Name>SECCOMP_V</Name>
      <Mode/>
    </Variable>
    <Variable>
      <Value>latest</Value>
      <Name>LIBNVIDIA_CONTAINER_V</Name>
      <Mode/>
    </Variable>
    <Variable>
      <Value>latest</Value>
      <Name>CONTAINER_TOOLKIT_V</Name>
      <Mode/>
    </Variable>
    <Variable>
      <Value>latest</Value>
      <Name>NVIDIA_CONTAINER_RUNTIME_V</Name>
      <Mode/>
    </Variable>
    <Variable>
      <Value>latest</Value>
      <Name>MLX_MFT_V</Name>
      <Mode/>
    </Variable>
    <Variable>
      <Value>latest</Value>
      <Name>TARGETCLI_FB_V</Name>
      <Mode/>
    </Variable>
    <Variable>
      <Value>latest</Value>
      <Name>RTSLIB_FB_V</Name>
      <Mode/>
    </Variable>
    <Variable>
      <Value>latest</Value>
      <Name>CONFIGSHELL_FB_V</Name>
      <Mode/>
    </Variable>
    <Variable>
      <Value>false</Value>
      <Name>BUILD_JOYDEV</Name>
      <Mode/>
    </Variable>
    <Variable>
      <Value>true</Value>
      <Name>BEEP</Name>
      <Mode/>
    </Variable>
    <Variable>
      <Value>latest</Value>
      <Name>ZFS_V</Name>
      <Mode/>
    </Variable>
    <Variable>
      <Value>false</Value>
      <Name>DONTWAIT</Name>
      <Mode/>
    </Variable>
    <Variable>
      <Value>master</Value>
      <Name>GNIF_BRANCH</Name>
      <Mode/>
    </Variable>
    <Variable>
      <Value>false</Value>
      <Name>BUILD_USBIP</Name>
      <Mode/>
    </Variable>
  </Environment>
  <Labels/>
  <Config Name="Data Path" Target="/usr/src" Default="" Mode="rw" Description="Main Path" Type="Path" Display="always" Required="true" Mask="false">/mnt/cache/appdata/kernel</Config>
  <Config Name="Beta Build" Target="BETA_BUILD" Default="" Mode="" Description="Enter here for which 'beta' or 'rc' you want to build eg: 'beta35', 'rc1', 'rc2'. If you are building for a stable release leave this value empty." Type="Variable" Display="always-hide" Required="false" Mask="false"/>
  <Config Name="Build with nVidia support" Target="BUILD_NVIDIA" Default="true|false" Mode="" Description="Set to 'true' to build the images with nVidia drivers (otherwise set to 'false')." Type="Variable" Display="always-hide" Required="false" Mask="false">true</Config>
  <Config Name="Build with DVB support" Target="BUILD_DVB" Default="false|true" Mode="" Description="Set to 'true' to build the images with DVB drivers (otherwise set to 'false')." Type="Variable" Display="always-hide" Required="false" Mask="false">false</Config>
  <Config Name="DVB Driver Type" Target="DVB_TYPE" Default="libreelec|digitaldevices|tbsos" Mode="" Description="Select which type of driver you want to build into the Images/Kernel. Valid choices currently are: 'libreelec' = LibreELEC DVB drivers (default), 'digitaldevices' = DigitalDevices DVB drivers &amp;amp; 'tbsos' = TBS OpenSource DVB drivers (without quotes).&#13;&#10;If you set BUILD_DVB to 'false' you can ignore this entry.&#13;&#10;(Please note that can only choose one driver)" Type="Variable" Display="always-hide" Required="false" Mask="false">libreelec</Config>
  <Config Name="Build with ZFS support" Target="BUILD_ZFS" Default="false|true" Mode="" Description="Set to 'true' to build the images with ZFS support (otherwise set to 'false').&#13;&#10;ATTENTION: you have to uninstall any Plugin that enables ZFS otherwise the kernel won't work right (This custom build will load all created ZFS Pools at the Array start)." Type="Variable" Display="always-hide" Required="false" Mask="false">false</Config>
  <Config Name="Load ZFS Pools on Array start/stop" Target="LOAD_UNLOAD_ZFS_WITH_ARRAY" Default="false|true" Mode="" Description="Set this value to 'true' to load/unload the ZFS Pools on Array start/stop otherwise the ZFS Pools are loaded after the first Array start after a reboot." Type="Variable" Display="always-hide" Required="false" Mask="false">false</Config>
  <Config Name="Build with iSCSI Target support" Target="BUILD_ISCSI" Default="false|true" Mode="" Description="Set to 'true' to build the images with iSCSI Target Support (otherwise set to 'false') ATTENTION: Please note at the time this feature is command line only, please visit the support thread on the Unraid forums and download the manuals how to add a block or fileio volume (if you mount a block volume please always mount it with: '/dev/disk/by-id/...' otherwise you risk data loss)." Type="Variable" Display="always-hide" Required="false" Mask="false">false</Config>
  <Config Name="Melanox Firmware Tools" Target="BUILD_MLX_MFT" Default="false|true" Mode="" Description="Set to 'true' to build the images with the Melanox Firmware Tools (otherwise set to 'false')." Type="Variable" Display="always-hide" Required="false" Mask="false">false</Config>
  <Config Name="Build USBip-HOST" Target="BUILD_USBIP" Default="false|true" Mode="" Description="Set to 'true' to build the images with USBip HOST support (otherwise set to 'false'). In addition to this module you can also install the Plugin 'Unraid USBip GUI' form the CA App." Type="Variable" Display="always-hide" Required="false" Mask="false">false</Config>
  <Config Name="gnif Vendor-Reset Patch" Target="BUILD_GNIF_VENDOR_RESET" Default="false|true" Mode="" Description="Set this value to 'true' to build the images with the gnif/vendor-reset patch (Source: https://github.com/gnif/vendor-reset)" Type="Variable" Display="always-hide" Required="false" Mask="false">false</Config>
  <Config Name="RMRR Relax Patch" Target="APPLY_RMRR_PATCH" Default="false|true" Mode="" Description="Set to 'true' to build the images with the Relax Intel patch. You have to append your syslinux.cfg with: 'intel_iommu=relax_rmrr' to enable this patch (Source: https://github.com/kiler129/relax-intel-rmrr)" Type="Variable" Display="always-hide" Required="false" Mask="false">false</Config>
  <Config Name="hpsahba Patch" Target="BUILD_HPSAHBA" Default="false|true" Mode="" Description="Set this value to 'true' to build the images with the hpsahba patch (Source: https://github.com/im-0/hpsahba)" Type="Variable" Display="always-hide" Required="false" Mask="false">false</Config>
  <Config Name="Enable Intel i915 and 'intel_gpu_top'" Target="ENABLE_i915" Default="false|true" Mode="" Description="Set to 'true' to install 'intel_gpu_top' and enable the Intel 'i915' Kernel Modules on boot (otherwise set to 'false')." Type="Variable" Display="always-hide" Required="false" Mask="false">false</Config>
  <Config Name="Build GVT-g Support" Target="BUILD_GVTG" Default="false|true" Mode="" Description="Set to 'true' to build and enable the Intel GVT-g Support on boot (otherwise set to 'false'). Please refer to the support thread of this container." Type="Variable" Display="always-hide" Required="true" Mask="false">false</Config>
  <Config Name="Enable AMD amdgpu and 'radeontop'" Target="ENABLE_AMDGPU" Default="false|true" Mode="" Description="Set to 'true' to install 'radeontop' and enable the AMD 'amdgpu' Kernel Module on boot (otherwise set to 'false')." Type="Variable" Display="always" Required="false" Mask="false">false</Config>
  <Config Name="Build Coral Acceleration Module Drivers" Target="BUILD_CORAL" Default="false|true" Mode="" Description="Set to 'true' to install the Coral Acceleration Module Drivers and enable them on boot to utilize your Module(s) in Docker containers." Type="Variable" Display="always-hide" Required="true" Mask="false">false</Config>
  <Config Name="Build with Firewire support" Target="BUILD_FIREWIRE" Default="false|true" Mode="" Description="Set to 'true' to build the Firewire modules (otherwise set to 'false')." Type="Variable" Display="always-hide" Required="true" Mask="false">false</Config>
  <Config Name="Compile CPU Count" Target="CPU_COUNT" Default="" Mode="" Description="Compile CPU Count (assign as many cores of your CPU you want or set to 'all' if you want to use all)." Type="Variable" Display="always-hide" Required="true" Mask="false">all</Config>
  <Config Name="Clean-up" Target="CLEANUP" Default="moderate|full|false" Mode="" Description="Cleanup after finishing the build (set to 'full' and everything except for the output folder will be deleted, set to 'moderate' and everything except for the downloads and the output folder will be deleted, leave empty or set to 'false' to let everything as it is and don't clean up)." Type="Variable" Display="always-hide" Required="true" Mask="false">moderate</Config>
  <Config Name="Create Backup" Target="CREATE_BACKUP" Default="true|false" Mode="" Description="Set to 'true' if you want to create a backup of your existing bzroot, bzimage, bzmodules &amp;amp; bzfirmware files in the main directory of the container (Please make sure that you always backup all your files also to a local computer bevor you copy over the new files)." Type="Variable" Display="always-hide" Required="false" Mask="false">true</Config>
  <Config Name="Save Log to File" Target="SAVE_LOG" Default="false|true" Mode="" Description="Set to 'true' (without quotes) if you want to save the log output to a file in the main directory (every log is formated in this way: 'DATE_TIME.log')" Type="Variable" Display="always-hide" Required="false" Mask="false">false</Config>
  <Config Name="Apply User Patches" Target="USER_PATCHES" Default="false|true" Mode="" Description="Set to 'true' and the container will create a folder in the main directory where you can paste your Kernel patch files and will apply them automatically when building the Kernel (otherwise leave blank - the container will wait 120 seconds after the start to put your user patches in the patch folder - please backup your patch files since the folder will be deleted if 'Cleanup' is set to 'moderate' or 'full')." Type="Variable" Display="always-hide" Required="false" Mask="false">false</Config>
  <Config Name="Custom Build Mode" Target="CUSTOM_MODE" Default="false|true" Mode="" Description="This is only for Advanced users!&#13;&#10;In this mode the container will stop right at the beginning and will copy over the build script and the dependencies to build the kernel modules for DVB and joydev in the main directory (I highly recommend using this mode for changing things in the build script like adding patches or other modules to build, connect to the console of the container with: 'docker exec -ti NAMEOFYOURCONTAINER /bin/bash' and then go to the /usr/src directory, also the build script is executable)." Type="Variable" Display="always-hide" Required="false" Mask="false">false</Config>
  <Config Name="Image file path" Target="IMAGES_FILE_PATH" Default="" Mode="" Description="This is the default location where your Stock Unraid bzroot, bzimage, bzmodules &amp;amp; bzfirmware inside your container is located (only change if you are know what you are doing!)" Type="Variable" Display="advanced-hide" Required="true" Mask="false">/usr/src/stock</Config>
  <Config Name="boot Path - ReadOnly" Target="/host/boot" Default="" Mode="ro" Description="boot Path - ReadOnly (needed if you enabled Backup of your bzroot, bzimage, bzmodules &amp;amp; bzfirmware)" Type="Path" Display="advanced-hide" Required="true" Mask="false">/boot</Config>
  <Config Name="nVidia Driver Version" Target="NV_DRV_V" Default="" Mode="" Description="nVidia Driver Version (set to 'latest' and the container tries to get the latest version or enter you preferred version number eg: 440.82)" Type="Variable" Display="advanced-hide" Required="true" Mask="false">latest</Config>
  <Config Name="DigitalDevices Driver Version" Target="DD_DRV_V" Default="" Mode="" Description="DigitalDevices Driver Version (set to 'latest' and the container tries to get the latest version from GitHub or enter you preferred version number eg: 0.9.37)" Type="Variable" Display="advanced-hide" Required="true" Mask="false">latest</Config>
  <Config Name="LibreELEC Driver Version" Target="LE_DRV_V" Default="" Mode="" Description="LibreELEC Driver Version (set to 'latest' and the container tries to get the latest version or enter you preferred version number eg: 1.4.0)" Type="Variable" Display="advanced-hide" Required="true" Mask="false">latest</Config>
  <Config Name="gnif/vendor-reset Branch" Target="GNIF_BRANCH" Default="" Mode="" Description="Enter the preferred branch that you want to install (eg: 'master', 'feature/audio_reset',... source and branches here: https://github.com/gnif/vendor-reset/tree/master)" Type="Variable" Display="advanced-hide" Required="true" Mask="false">master</Config>
  <Config Name="Seccomp Version" Target="SECCOMP_V" Default="" Mode="" Description="Seccomp Version (set to 'latest' and the container tries to get the latest version from GitHub or enter you preferred version number eg: 2.4.3)" Type="Variable" Display="advanced-hide" Required="true" Mask="false">latest</Config>
  <Config Name="libnvidia-container Version" Target="LIBNVIDIA_CONTAINER_V" Default="" Mode="" Description="libnvidia-container Version (set to 'latest' and the container tries to get the latest version or enter you preferred version number eg: 1.1.1)" Type="Variable" Display="advanced-hide" Required="true" Mask="false">latest</Config>
  <Config Name="container-toolkit Version" Target="CONTAINER_TOOLKIT_V" Default="" Mode="" Description="container-toolkit Version (set to 'latest' and the container tries to get the latest version or enter you preferred version number eg: 1.1.1)" Type="Variable" Display="advanced-hide" Required="true" Mask="false">latest</Config>
  <Config Name="nvidia-container-runtime Version" Target="NVIDIA_CONTAINER_RUNTIME_V" Default="" Mode="" Description="libnvidia-container Version (set to 'latest' and the container tries to get the latest version or enter you preferred version number eg: 3.2.0)" Type="Variable" Display="advanced-hide" Required="true" Mask="false">latest</Config>
  <Config Name="Melanox Firmware Tools Version" Target="MLX_MFT_V" Default="" Mode="" Description="Melanox Firmware Tools Version (set to 'latest' and the container tries to get the latest version or enter you preferred version number eg: 4.14.0-3)" Type="Variable" Display="advanced-hide" Required="true" Mask="false">latest</Config>
  <Config Name="TargetCLI-FB Version" Target="TARGETCLI_FB_V" Default="" Mode="" Description="TargetCLI-FB Version (set to 'latest' and the container tries to get the latest version or enter you preferred version number eg: 2.1.53)" Type="Variable" Display="advanced-hide" Required="true" Mask="false">latest</Config>
  <Config Name="RTSlib-FB Version" Target="RTSLIB_FB_V" Default="" Mode="" Description="RTSlib-FB Version (set to 'latest' and the container tries to get the latest version or enter you preferred version number eg: 2.1.73)" Type="Variable" Display="advanced-hide" Required="true" Mask="false">latest</Config>
  <Config Name="Configshell-FB Version" Target="CONFIGSHELL_FB_V" Default="" Mode="" Description="Configshell-FB Version (set to 'latest' and the container tries to get the latest version or enter you preferred version number eg: 1.1.28)" Type="Variable" Display="advanced-hide" Required="true" Mask="false">latest</Config>
  <Config Name="Build with Joydev Support" Target="BUILD_JOYDEV" Default="false|true" Mode="" Description="Set to 'true to build the images with Joydev support (otherwise set to 'false')." Type="Variable" Display="advanced-hide" Required="false" Mask="false">false</Config>
  <Config Name="Ending Sound" Target="BEEP" Default="true|false" Mode="" Description="Set to 'true' and your server will output a sound if the build process is finished (only works if you got a PC speaker installed on your motherboard)" Type="Variable" Display="advanced-hide" Required="false" Mask="false">true</Config>
  <Config Name="ZFS Version" Target="ZFS_V" Default="" Mode="" Description="ZFS Version (set to 'latest' and the container tries to get the latest version or enter you preferred version number eg: 0.8.4 or if you are using the 6.9.0 repository you can set it to 'master' to build it from the 'master' branch from OpenZFS from Github)" Type="Variable" Display="advanced-hide" Required="true" Mask="false">latest</Config>
  <Config Name="Skip waiting time" Target="DONTWAIT" Default="false|true" Mode="" Description="Only set to 'true' if you know what you are doing!" Type="Variable" Display="advanced-hide" Required="false" Mask="false">false</Config>
  <Config Name="UMASK" Target="UMASK" Default="" Mode="" Description="Container Variable: UMASK" Type="Variable" Display="advanced-hide" Required="true" Mask="false">000</Config>
  <Config Name="UID" Target="UID" Default="" Mode="" Description="Container Variable: UID" Type="Variable" Display="advanced-hide" Required="true" Mask="false">99</Config>
  <Config Name="GID" Target="GID" Default="" Mode="" Description="Container Variable: GID" Type="Variable" Display="advanced-hide" Required="true" Mask="false">100</Config>
  <Config Name="DATA_PERM" Target="DATA_PERM" Default="" Mode="" Description="Container Variable: DATA_PERM" Type="Variable" Display="advanced-hide" Required="true" Mask="false">770</Config>
</Container>
