<?xml version="1.0"?>
<Container version="2">
  <Name>Proxy-Server</Name>
  <Repository>ghcr.io/ich777/proxy-server</Repository>
  <Registry>https://hub.docker.com/r/ich777/proxy-server/</Registry>
  <Network>bridge</Network>
  <MyIP/>
  <Shell>bash</Shell>
  <Privileged>false</Privileged>
  <Support>https://forums.unraid.net/topic/83786-support-ich777-application-dockers/</Support>
  <Project>https://github.com/ich777/docker-proxy-server</Project>
  <Overview>This container is a dedicated http/https and SOCKS5 proxy both with authentication support.&#xD;
It's intended usecase is to use it in combination with a VPN container to give your applications outside of your server access to the VPN.&#xD;
&#xD;
If you VPN supports native Wireguard support:&#xD;
1. Go to the built in VPN Manager in the Settings tab in Unraid&#xD;
2. Import the configuration vrom your VPN provider&#xD;
3. Make sure that "Peer type of access" is set to "VPN tunneled access for docker"&#xD;
4. Change the slider to active&#xD;
5. Set the network from this container to the `wg:` network from your provider&#xD;
&#xD;
To connect the container to a already installed VPN container:&#xD;
1. Set the `Network Type` in this Docker template to `None`&#xD;
2. Enable the Advanced View on the top right corner from this Docker template and append:&#xD;
`--net=container:CONTAINERNAME`  &#xD;
To the Extra Parameters (you have to change `CONTAINERNAME` to the VPN Docker container name eg: `--net=container:binhex-delugevpn` when the VPN Docker container name is `binhex-delugevpn` - case sensitive!).&#xD;
3. Go to the VPN Docker template and create two new port mappings with the button `Add another Path, Port, Variable, Label or Device`, by default 8118 (for http/https proxy) and 1030 (for SOCKS5 proxy) both TCP protocol and with host/container port set to the same port.&#xD;
4. When you've done that you can connect the application(s) to the proxy to the host IP from the VPN Docker container, by default with 8118 (for http/https proxy) and 1030 (for SOCKS5 proxy)&#xD;
&#xD;
**Note for Firefox and Chrome:** Firefox and Chrome natively don't support authentication for a SOCKS5 proxy, it is recommended to use a extension like FoxyProxy supports authentication).&#xD;
&#xD;
**URL encode:** If you are using a password with special charcters and want to use the http/https proxy system wide, the container ships with `urlencode` to convert your password to a URL compatible format. Just open up a terminal from the container, issue `urlencode` and follow the prompts.&#xD;
&#xD;
The container uses dumbproxy and socks5 (both written in golang) as a backend to serve http/https and SOCKS5 proxy.</Overview>
  <Category>Network:Proxy Network:Privacy</Category>
  <WebUI/>
  <TemplateURL>False</TemplateURL>
  <Icon>https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/proxy-server.png</Icon>
  <ExtraParams>--restart=unless-stopped --sysctl net.ipv6.conf.all.disable_ipv6=1</ExtraParams>
  <PostArgs/>
  <CPUset/>
  <DateInstalled/>
  <DonateText>If you like my work please </DonateText>
  <DonateLink>https://www.paypal.me/chips777</DonateLink>
  <Requires/>
  <Config Name="http/https Proxy" Target="8118" Default="" Mode="tcp" Description="http/https proxy port" Type="Port" Display="always" Required="true" Mask="false">8118</Config>
  <Config Name="SOCKS5 Proxy" Target="1080" Default="" Mode="tcp" Description="SOCKS5 proxy port" Type="Port" Display="always" Required="true" Mask="false">1080</Config>
  <Config Name="http/https Proxy Enabled" Target="HTTP_PROXY" Default="true|false" Mode="" Description="Enable or disable http/https proxy" Type="Variable" Display="always" Required="true" Mask="false">true</Config>
  <Config Name="SOCKS5 Proxy Enabled" Target="SOCKS5_PROXY" Default="true|false" Mode="" Description="Enable or disable SOCKS5 proxy" Type="Variable" Display="always" Required="true" Mask="false">true</Config>
  <Config Name="http/https User" Target="HTTP_PROXY_USER" Default="" Mode="" Description="User for http/https proxy (leave empty for no authentication)" Type="Variable" Display="always" Required="false" Mask="false"/>
  <Config Name="http/https Password" Target="HTTP_PROXY_PWD" Default="" Mode="" Description="Password for http/https proxy (Not all special characters are allowed, please see the log if the container catches a non allowed character)Allowed special characters are: ?#/[]{}.:,/-_~-+" Type="Variable" Display="always" Required="false" Mask="false"/>
  <Config Name="SOCKS5 User" Target="SOCKS5_PROXY_USER" Default="" Mode="" Description="User for SOCKS5 proxy (leave empty for no authentication)" Type="Variable" Display="always" Required="false" Mask="false"/>
  <Config Name="SOCKS5 Password" Target="SOCKS5_PROXY_PWD" Default="" Mode="" Description="Password for SOCKS5 proxy (Not all special characters are allowed, please see the log if the container catches a non allowed character)Allowed special characters are: ?#/[]{}.:,/-_~-+" Type="Variable" Display="always" Required="false" Mask="false"/>
  <Config Name="http/https Proxy Port" Target="HTTP_PROXY_PORT" Default="" Mode="" Description="http/https proxy port (only change if you know what you are doing)" Type="Variable" Display="advanced" Required="true" Mask="false">8118</Config>
  <Config Name="SOCKS5 Proxy Port" Target="SOCKS5_PROXY_PORT" Default="1080" Mode="" Description="SOCKS5 proxy port (only change if you know what you are doing)" Type="Variable" Display="advanced" Required="true" Mask="false">1080</Config>
  <Config Name="UID" Target="UID" Default="" Mode="" Description="Only change when you know what you are doing!" Type="Variable" Display="advanced" Required="true" Mask="false">99</Config>
  <Config Name="GID" Target="GID" Default="" Mode="" Description="Only change when you know what you are doing!" Type="Variable" Display="advanced" Required="true" Mask="false">100</Config>
  <Config Name="UMASK" Target="UMASK" Default="" Mode="" Description="Only change when you know what you are doing!" Type="Variable" Display="advanced" Required="true" Mask="false">0000</Config>
</Container>
